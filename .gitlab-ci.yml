image: docker:stable

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:dind

before_script:
  - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

stages:
  - build
  - deploy

build:
  stage: build
  only:
    - master
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF .
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE

deploy:
  stage: deploy
  only:
    - master
  script:
    # Handle SSH key management inside the container
    - which ssh-agent || ( apk --update add openssh-client )
    - which curl || ( apk --update add curl )
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - ssh-keyscan $PROD_DOCKER_HOST >> ~/.ssh/known_hosts

    # Establish docker connection
    - export DOCKER_HOST=ssh://docker@$PROD_DOCKER_HOST

    - ssh docker@$PROD_DOCKER_HOST -o "StrictHostKeyChecking=no" "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD -e none@example.com $CI_REGISTRY && docker ps --filter name=$CI_PROJECT_NAME-* -aq | xargs docker stop | xargs docker rm ; docker run -dit -p -p 64443:80 --name $CI_PROJECT_NAME-$CI_BUILD_REF $CI_REGISTRY_IMAGE:$CI_BUILD_REF"